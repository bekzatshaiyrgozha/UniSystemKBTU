package Controllers;

import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

import DLL.DBContext;
import Users.Manager;
import Users.Teacher;
import Utils.FinanceOffice;

public class FinanceManagerController {
	private static final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);

	public static void giveSalary() {
		int sum = DBContext.getManagers().size() * 200000 + DBContext.getTeachers().size() * 300000 + 400000 + 1500000;
		if(FinanceOffice.budjet > 0 && FinanceOffice.budjet > sum) {
			FinanceOffice.budjet -= sum;
			System.out.println("Manager gived salary.");
			for (Manager manager : DBContext.getManagers()) {
				manager.setSalaryPaid();
            }
			for(Teacher teacher : DBContext.getTeachers()) {
				teacher.setSalaryPaid();
			}
			
			
		}else {
			System.out.println("Not enough money in the budget");
		}
	}
	
	public static double seeBudjet() {
		return FinanceOffice.getBudjet();
	}
	
	public static void scheduleSalaryReset() {
        scheduler.scheduleAtFixedRate(() -> {
            System.out.println("Resetting salary status for all employees...");

            for (Manager manager : DBContext.getManagers()) {
                manager.resetSalaryStatus();
            }

            for (Teacher teacher : DBContext.getTeachers()) {
                teacher.resetSalaryStatus();
            }

            System.out.println("All employees' salary statuses have been reset.");
        }, 1, 1, TimeUnit.MINUTES); 
    }
	
	
	

}
